import"../chunks/DsnmJJEf.js";import"../chunks/BMD7xWOl.js";import{d as W,o as X,a as Y}from"../chunks/BLb_g3E9.js";import{p as Z,f as R,s as d,a as j,d as I,t as F,b as M,c as K,k as g,G as A,x as w,r as y}from"../chunks/D4o8qBDz.js";import{e as Q,i as V,s as O}from"../chunks/6Rsdw9SR.js";import{i as tt}from"../chunks/Ca8fEeAU.js";var et=R('<button class="bg-secondary min-w-16 p-2 cursor-pointer rounded-lg text-link-text" aria-label="Load"></button>'),st=R(`<h2 class="text-4xl text-primary-text pb-12 border-b border-gray-200/10 mb-8">Conway's Game of Life</h2> <div class="pb-12 border-b border-gray-200/10 mb-8"><h3 class="text-2xl text-primary-text mb-4">康威生命遊戲</h3> <p class="text-primary-text font-light mb-4">康威生命遊戲（Conway's Game of Life），通常簡稱為生命遊戲 （Life），是 1970
		年由英國數學家約翰·何頓·康威（John Horton Conway）設計的一種「細胞自動機」（Cellular
		Automaton）。</p> <p class="text-primary-text font-light">它被稱為「零玩家遊戲」（Zero-player
		game），這意味著它的演化完全由其初始狀態決定，不需要任何後續的玩家輸入。</p></div> <div class="pb-12 border-b border-gray-200/10 mb-8"><h3 class="text-xl text-primary-text mb-4">遊戲規則</h3> <p class="text-primary-text font-light mb-4">生命遊戲在一個二維的方格網格上進行，每個方格（細胞）有兩種狀態：<strong class="svelte-fn7bw3">存活</strong> (Alive) 或<strong class="svelte-fn7bw3">死亡</strong> (Dead)。</p> <p class="text-primary-text font-light mb-4">一個細胞在下一個世代的狀態，取決於其周圍<strong class="svelte-fn7bw3">8 個鄰居</strong>（上、下、左、右、以及四個對角線）當前的存活狀態。</p> <ul class="flex flex-col gap-y-4 text-primary-text mb-8"><li><h4 class="font-bold mb-2">1. 人口稀少 (Underpopulation)</h4> <p class="font-light indent-4">如果一個<strong class="svelte-fn7bw3">存活</strong>細胞的鄰居少於<strong class="svelte-fn7bw3">2</strong> 個，它會因為「孤單」而在下一個世代<strong class="svelte-fn7bw3">死亡</strong>。</p></li> <li><h4 class="font-bold mb-2">2. 穩定存活 (Survival)</h4> <p class="font-light indent-4">如果一個<strong class="svelte-fn7bw3">存活</strong>細胞有<strong class="svelte-fn7bw3">2</strong>或<strong class="svelte-fn7bw3">3</strong> 個存活的鄰居，它會<strong class="svelte-fn7bw3">繼續存活</strong>到下一個世代。</p></li> <li><h4 class="font-bold mb-2">3. 人口過剩 (Overpopulation)</h4> <p class="font-light indent-4">如果一個<strong class="svelte-fn7bw3">存活</strong>細胞的鄰居超過 <strong class="svelte-fn7bw3">3</strong> 個，它會因為「擁擠」而在下一個世代<strong class="svelte-fn7bw3">死亡</strong>。</p></li> <li><h4 class="font-bold mb-2">4. 繁殖 (Reproduction)</h4> <p class="font-light indent-4">如果一個<strong class="svelte-fn7bw3">死亡</strong>細胞<strong class="svelte-fn7bw3">剛好</strong>有<strong class="svelte-fn7bw3">3</strong> 個存活的鄰居，它會因為「繁殖」而在下一個世代變為<strong class="svelte-fn7bw3">存活</strong>狀態。</p></li></ul> <p class="text-primary-text font-light">生命遊戲的魅力在於，僅僅透過這四條簡單的規則，就能從一個簡單的初始圖案演化出極其複雜、無法預測的動態系統。</p></div> <div class="space-y-8 border-b border-gray-200/10 pb-12 mb-8"><div class="border-l-4 border-link-text pl-4"><h5 class="text-lg text-primary-text mb-2">湧現行為 (Emergent Behavior)</h5> <p class="text-primary-text text-sm">系統會自發地產生複雜的結構和行為，這是「湧現」的經典範例。</p></div> <div class="border-l-4 border-link-text pl-4"><h5 class="text-lg text-primary-text mb-2">圖靈完備 (Turing Completeness)</h5> <p class="text-primary-text text-sm">生命遊戲在理論上被證明是「圖靈完備」的，這意味著它（在足夠大的網格和時間下）可以模擬任何電腦演算法，甚至可以建造一個在生命遊戲中運作的生命遊戲。</p></div> <div class="border-l-4 border-link-text pl-4"><h5 class="text-lg text-primary-text mb-2">多樣的模式 (Common Patterns)</h5> <p class="text-primary-text text-sm mb-2">玩家和研究者發現了許多有趣的模式，並為其命名，主要分為三類：</p> <ul class="text-primary-text text-sm space-y-1 ml-4"><li><strong class="svelte-fn7bw3">靜物 (Still Lifes):</strong>保持不變的圖案（例如 "Block" 方塊）。</li> <li><strong class="svelte-fn7bw3">振盪器 (Oscillators):</strong>在幾個狀態之間循環的圖案（例如 "Blinker" 閃爍燈）。</li> <li><strong class="svelte-fn7bw3">太空船 (Spaceships):</strong>會在網格上移動的圖案（最有名的是 "Glider" 滑翔翼）。</li></ul></div></div> <div class="pb-12 border-b border-gray-200/10 mb-8"><h4 class="text-lg text-primary-text mb-2">操作說明</h4> <p class="text-primary-text text-sm mb-4">點擊方格來設定初始的存活細胞，然後按下 Start 開始模擬。你可以隨時暫停來調整細胞狀態。</p></div> <div class="flex flex-col gap-4 mt-6 md:flex-row"><div class="flex flex-row gap-2 w-full md:w-32 md:flex-col"><button aria-label="Start">Start</button> <button aria-label="Pause">Pause</button> <button class="bg-secondary min-w-16 p-2 cursor-pointer rounded-lg text-link-text" aria-label="Save">Save</button> <div class="flex flex-col gap-4 mt-8"></div></div> <canvas id="canvas" class="w-full max-w-xl aspect-square"></canvas></div>`,1);function ct(T,B){Z(B,!1);let r,a,c=A(null),p,i=[],n=[],b=A([]);const l=8,D=()=>{r=document.getElementById("canvas"),r.width=Math.floor(r.offsetWidth/l)*l,r.height=Math.floor(r.offsetHeight/l)*l,a=r.getContext("2d"),a.fillStyle="#646cff29",a.fillRect(0,0,r.width,r.height)},G=()=>{a.strokeStyle="#000000";for(let e=0;e<=r.width;e+=l)a.beginPath(),a.moveTo(e,0),a.lineTo(e,r.height),a.stroke();for(let e=0;e<=r.height;e+=l)a.beginPath(),a.moveTo(0,e),a.lineTo(r.width,e),a.stroke()},m=()=>{a.clearRect(0,0,r.width,r.height),G(),n=N()},k=(e,t)=>{a.clearRect(e*l+1,t*l+1,l-1,l-1);const s=i[t][e]?"#dfdfd6":"#646cff29";a.fillStyle=s,a.fillRect(e*l+1,t*l+1,l-1,l-1)},J=(e,t)=>[[e-1,t-1],[e,t-1],[e+1,t-1],[e-1,t],[e+1,t],[e-1,t+1],[e,t+1],[e+1,t+1]].filter(([s,o])=>n.some(([f,u])=>f===s&&u===o)).length,N=()=>{let e=[];for(let t=0;t<i.length;t+=1)for(let s=0;s<i[t].length;s+=1){const o=J(s,t),f=n.some(([u,U])=>u===s&&U===t)?[2,3]:[3];i[t][s]=f.includes(o),i[t][s]&&e.push([s,t]),k(s,t)}return e},$=e=>{const t=Math.floor(e.offsetX/l),s=Math.floor(e.offsetY/l);t<0||t>=p||s<0||s>=p||(n.some(([o,f])=>o===t&&f===s)?n=n.filter(([o,f])=>!(o===t&&f===s)):n.push([t,s]),i[s][t]=!i[s][t],k(t,s))},z=()=>{g(c)||w(c,setInterval(()=>{m()},300))},_=()=>{g(c)&&(clearInterval(g(c)),w(c,null))},E=()=>{const e=localStorage.getItem("conways-game-of-life-save")||"[]",t=JSON.parse(e);t.push(n),localStorage.setItem("conways-game-of-life-save",JSON.stringify(t))},H=e=>{n=g(b)[e],m()};X(()=>{D(),p=r.width/l,i=new Array(p).fill([]).map(()=>new Array(p).fill(!1)),w(b,JSON.parse(localStorage.getItem("conways-game-of-life-save")||"[]")),m()}),Y(()=>{_()}),tt();var S=st(),C=d(j(S),10),v=I(C),x=I(v);x.__click=z;var h=d(x,2);h.__click=_;var L=d(h,2);L.__click=E;var P=d(L,2);Q(P,5,()=>g(b),V,(e,t,s)=>{var o=et();o.__click=()=>H(s),o.textContent=`Load ${s+1}`,M(e,o)}),y(P),y(v);var q=d(v,2);q.__click=$,y(C),F(()=>{O(x,1,`bg-secondary min-w-16 p-2 cursor-pointer rounded-lg ${g(c)?"text-link-active-text":"text-link-text"}`),O(h,1,`bg-secondary min-w-16 p-2 cursor-pointer rounded-lg ${g(c)?"text-link-text":"text-link-active-text"}`)}),M(T,S),K()}W(["click"]);export{ct as component};
